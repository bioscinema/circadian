% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/circadian_analysis.R
\name{.wrap_angle}
\alias{.wrap_angle}
\title{Circadian Cosine Model Fitting and Phase Inference}
\usage{
.wrap_angle(x)
}
\arguments{
\item{y}{Numeric vector of observed values.}

\item{t}{Numeric vector of time points (same length as \code{y}).}

\item{period}{Numeric. Period of oscillation (hours). Default is 24.}

\item{omega}{Numeric. Angular frequency (\eqn{2\pi / period}). Used internally.}

\item{vcov_type}{Character. Covariance estimator: \code{"iid"}, \code{"HC0"}, or \code{"HC3"}.}

\item{object}{An object of class \code{"circadian_fit"}.}

\item{parm}{Character. Parameter for confidence interval: \code{"phi"}, \code{"A"}, or \code{"c"}.}

\item{level}{Confidence level for intervals. Default is 0.95.}

\item{method}{For intervals: \code{"delta"} or \code{"lrt"} (profile likelihood for phase).}

\item{grid_size}{Integer. Resolution of the grid used for LRT profile (default 1440).}

\item{L}{Contrast matrix for phase comparisons.}

\item{rhs}{Numeric vector specifying right-hand side of contrasts.}

\item{alternative}{Character. \code{"two.sided"}, \code{"less"}, or \code{"greater"}.}

\item{new_t}{Numeric vector of new time points for prediction.}

\item{interval}{\code{"none"}, \code{"confidence"}, or \code{"prediction"}.}
}
\value{
\describe{
\item{\code{fit_circadian}}{Returns a \code{"circadian_fit"} object containing
coefficients (\code{c}, \code{A}, \code{phi}, \code{B}, \code{C}), standard errors, covariance matrices,
residuals, and model details.}
\item{\code{confint_circadian}}{A numeric 2-vector of lower and upper limits.}
\item{\code{test_phase}}{A list with Wald test statistic, p-value, and metadata.}
\item{\code{test_phase_diff}}{Test results for phase difference between two models.}
\item{\code{predict_circadian}}{Predicted mean or interval estimates at \code{new_t}.}
}
}
\description{
Fit a fixed-frequency sinusoidal regression model to estimate circadian amplitude,
phase, and baseline expression from time-series data. The module also provides
helper utilities, robust covariance estimation, confidence intervals, and phase
contrast tests between models.
}
\details{
The model is defined as
\deqn{y_t = c + A \sin(\omega t + \phi) + \varepsilon_t,}
where \eqn{c} is the baseline, \eqn{A} is amplitude, \eqn{\phi} is phase, and
\eqn{\omega = 2\pi / \text{period}} is the angular frequency.
The parameters are estimated via linear regression on
\eqn{\sin(\omega t)} and \eqn{\cos(\omega t)} terms.
}
\section{Functions}{

\describe{
\item{\code{fit_circadian()}}{Main fitting routine estimating coefficients, standard errors, and covariance.}
\item{\code{confint_circadian()}}{Confidence intervals for amplitude, phase, and baseline (delta or LRT).}
\item{\code{test_phase()}}{Single-gene phase test against a null phase value.}
\item{\code{test_phase_diff()}}{Phase difference test between two fitted models.}
\item{\code{phase_contrast_test()}}{General linear contrast test for multiple phase estimates.}
\item{\code{predict_circadian()}}{Prediction and confidence/prediction intervals at new time points.}
}
}

\examples{
t <- seq(0, 48, by = 2)
y <- 10 + 1.5 * sin(2 * pi * t / 24 + pi/4) + rnorm(length(t), 0, 0.3)
fit <- fit_circadian(y, t)
fit$coef
confint_circadian(fit, parm = "phi")
pred <- predict_circadian(fit, new_t = seq(0, 24, by = 1), interval = "confidence")

}
